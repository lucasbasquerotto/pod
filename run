#!/bin/bash
set -eou pipefail

pod_layer_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

function error {
	echo -e "[error] $(date '+%F %T') - ${BASH_SOURCE[0]}:${BASH_LINENO[0]}: ${command}: ${*}" >&2
	exit 2
}

[ "${var_run__meta__no_stacktrace:-}" != 'true' ] \
	&& trap 'echo "[error] ${BASH_SOURCE[0]}:$LINENO" >&2; exit $LINENO;' ERR

start="$(date '+%F %T')"

if [ -z "$pod_layer_dir" ]; then
	error "[error] enter the vars directory parameter"
fi

if [ ! -f "$pod_layer_dir/vars.sh" ]; then
	error "[error] there is no such file $pod_layer_dir/vars.sh"
fi

export var_pod_layer_dir="$pod_layer_dir"

tmp_load_file="$pod_layer_dir/vars.sh"

# shellcheck disable=SC1090
. "$tmp_load_file"

command="${1:-}"

if [ -n "${var_load_script_path:-}" ]; then
	tmp_load_file="${pod_layer_dir}/${var_load_script_path}"

	# shellcheck disable=SC1090
	. "$tmp_load_file"
fi

if [ -z "${var_pod_vars_dir:-}" ]; then
	error "[error] var_pod_vars_dir was not loaded from the file $tmp_load_file"
fi

if [ -z "${var_pod_script:-}" ]; then
	error "[error] var_pod_script was not loaded from the file $tmp_load_file"
fi

if [ ! -f "$var_pod_script" ]; then
	error "[error] main script file ($var_pod_script) not found"
fi

if [ -z "${var_pod_tmp_dir:-}" ]; then
	error "[error] var_pod_tmp_dir was not loaded from the file $tmp_load_file"
fi

if [ ! -d "$var_pod_tmp_dir" ]; then
	mkdir -p "$var_pod_tmp_dir"
fi

if [ -z "${var_pod_data_dir:-}" ]; then
	error "[error] var_pod_data_dir was not loaded from the file $tmp_load_file"
fi

if [ -z "${var_inner_scripts_dir:-}" ]; then
	error "[error] var_inner_scripts_dir was not loaded from the file $tmp_load_file"
fi

if [ "${var_load_main__inner:-}" != 'true' ]; then
	bash "${var_pod_script}" "util:info:start" --title="[begin] $command"
fi

if [ "$command" = '__skip__' ]; then
	echo "skipping..."
elif [ -n "${data_dir:-}" ]; then
	script_log_file_dir="$data_dir/log/main"

	if [ ! -d "$script_log_file_dir" ]; then
		[ -d "$data_dir" ] && [ "$(stat -c "%U" "$data_dir")" != "$(whoami)" ] \
			&& mkdircmd=( sudo mkdir ) \
			|| mkdircmd=( mkdir )

		"${mkdircmd[@]}" -p "${script_log_file_dir}"
	fi

	[ -d "$script_log_file_dir" ] && [ "$(stat -c "%U" "$script_log_file_dir")" != "$(whoami)" ] \
		&& cmdprefix=( sudo ) \
		|| cmdprefix=()

	teecmd=( ${cmdprefix+"${cmdprefix[@]}"} )
	teecmd+=( tee )

	log_file_tmp="${script_log_file_dir}/tmp.run.$(date '+%Y-%m-%d.%H-%M-%S').$$.log"

	{
		if [ "${var_load_main__inner:-}" != 'true' ]; then
			echo "#######################################################################"
			echo "$(date '+%F %T') [main: $command] [log] start ($pod_layer_dir)"
		fi

		bash "${var_pod_script}" "${@}" && status=$? || status=$?

		if [[ $status -ne 0 ]]; then
			error "$command - exited with status $status"
		fi

		if [ "${var_load_main__inner:-}" != 'true' ]; then
			echo "$(date '+%F %T') [main: $command] [log] end ($pod_layer_dir)"
			echo "#######################################################################"
		fi
	} 2>&1 | "${teecmd[@]}" --append "$log_file_tmp"

	log_file="${script_log_file_dir}/run.$(date '+%Y-%m-%d').log"

	catcmd=( ${cmdprefix+"${cmdprefix[@]}"} )
	catcmd+=( cat )

	"${catcmd[@]}" "$log_file_tmp" | "${teecmd[@]}" --append "$log_file" >/dev/null

	rmcmd=( ${cmdprefix+"${cmdprefix[@]}"} )
	rmcmd+=( rm )

	"${rmcmd[@]}" -f "$log_file_tmp"
else
	bash "${var_pod_script}" "${@}" && status=$? || status=$?

	if [[ $status -ne 0 ]]; then
		error "$command - exited with status $status"
	fi
fi

if [ "${var_load_main__inner:-}" != 'true' ]; then
	bash "${var_pod_script}" "util:info:end" --title="[end] $command"

	end="$(date '+%F %T')"
	bash "${var_pod_script}" "util:info:summary" --title="[main] $command" --start="$start" --end="$end"
fi
